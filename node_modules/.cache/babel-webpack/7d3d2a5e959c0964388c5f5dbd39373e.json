{"ast":null,"code":"import _asyncToGenerator from \"/home/ggomez/Escritorio/KeyboardTale/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nexport class HomeComponent {\n  constructor() {\n    this.texts = [[], []]; // textos divididos en substrings\n\n    this.currentText = 0; // texto al que pertenece el subtring que se esta mostrando\n\n    this.currentSub = 0; // substring que se muestra en pantalla\n\n    this.instructions = \"\"; // instrucciones del juego\n    //audios: Audio[] = [];\n\n    this.alreadyShown = \"\";\n    this.playerInput = \"\"; // lo que el jugador esta ingresando en tiempo real\n\n    this.audios = []; // coleccion de todos los audios\n\n    this.substringInput = [];\n    this.substringScore = [];\n    this.substringSound = [];\n    this.substringValue = [];\n    this.minValues = [];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.fetchTexts().then(() => _this.fetchSound()).then(() => {\n        _this.initializeMatrixes();\n\n        _this.setMinValues();\n\n        _this.setSounds();\n\n        _this.setSubstringValues();\n\n        console.log(_this.audios);\n        document.addEventListener('keydown', event => {\n          _this.processInput(event.key);\n        }, true);\n      });\n      document.getElementById('pastText').innerHTML = _this.texts[_this.currentText][_this.currentSub];\n    })();\n  }\n\n  setSubstringValues() {\n    for (let t = 0; t < this.texts.length; t++) {\n      for (let s = 0; s < this.texts[t].length; s++) {\n        for (let i = 0; i < this.texts[t][s].length; i++) {\n          if (65 <= this.texts[t][s].charCodeAt(i) && this.texts[t][s].charCodeAt(i) <= 90) {\n            // mayusculas\n            this.substringValue[t][s][this.texts[t][s].charCodeAt(i) - 55] += 1;\n          } else if (97 <= this.texts[t][s].charCodeAt(i) && this.texts[t][s].charCodeAt(i) <= 122) {\n            // minusculas\n            this.substringValue[t][s][this.texts[t][s].charCodeAt(i) - 87] += 1;\n          } else if (48 <= this.texts[t][s].charCodeAt(i) && this.texts[t][s].charCodeAt(i) <= 57) {\n            // numeros\n            this.substringValue[t][s][this.texts[t][s].charCodeAt(i) - 48] += 1;\n          }\n        }\n      }\n    }\n\n    console.log('values: ', this.substringValue[0]);\n  }\n\n  setSounds() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield fetch('/assets/texts/indiceAudios.txt').then(data => data.text());\n      let instances = result.match(/.*Audio\\.txt/g);\n\n      for (let i = 0; i < instances.length; i++) {\n        let j = 0;\n        yield fetch('/assets/texts/' + instances[i]).then(data => data.text()).then(text => {\n          let arrays = text.match(/\\[(.*)\\]/g);\n          arrays.forEach(value => {\n            _this2.substringSound[i][j] = _this2.textToValues(value);\n            j++;\n          });\n        });\n      }\n    })();\n  }\n\n  setMinValues() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield fetch('/assets/texts/indiceValores.txt').then(data => data.text());\n      let instances = result.match(/.*Valores\\.txt/g);\n\n      for (let i = 0; i < instances.length; i++) {\n        let j = 0;\n        yield fetch('/assets/texts/' + instances[i]).then(data => data.text()).then(text => {\n          let arrays = text.match(/\\[(.*)\\]/g);\n          arrays.forEach(value => {\n            _this3.minValues[i][j] = _this3.textToValues(value);\n            j++;\n          });\n        });\n      }\n    })();\n  }\n\n  textToValues(value) {\n    let valuesArray = [];\n    value.split(/\\[|\\]/)[1].split(',').forEach(value => valuesArray.push(+value));\n    return valuesArray;\n  }\n\n  fetchTexts() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield fetch('/assets/texts/instrucciones.txt').then(data => data.text()).then(text => _this4.instructions = text);\n      let result = yield fetch('/assets/texts/indice.txt').then(data => data.text());\n      let instances = result.match(/([a-z]*[A-Z]*[0-9]*)*\\.txt/g);\n\n      for (let i = 0; i < instances.length; i++) {\n        let j = 0;\n        yield fetch('/assets/texts/' + instances[i]).then(data => data.text()).then(text => {\n          _this4.textToFrases(text).forEach(frase => {\n            _this4.texts[i][j] = frase;\n            j++;\n          });\n        });\n      }\n    })();\n  }\n\n  textToFrases(text) {\n    let ret = [];\n    text.split(/\\|\\|\\|/).forEach(frase => {\n      ret.push(frase);\n    });\n    return ret;\n  }\n\n  fetchSound() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = \"\";\n      yield fetch('/assets/sounds/audios.txt').then(data => data.text()).then(text => result = text);\n      let instances = result.match(/(.*\\.wav)/g);\n\n      for (let i = 0; i < instances.length; i++) {\n        _this5.audios.push(new Audio('/assets/sounds/' + instances[i]));\n      }\n    })();\n  }\n\n  processInput(text) {\n    const splitted = text.split('<br>');\n\n    if (splitted.length > 1) {\n      text = splitted[1];\n      console.log(text);\n    }\n\n    for (let i = 0; i < text.length; i++) {\n      if (65 <= text.charCodeAt(i) && text.charCodeAt(i) <= 90) {\n        // mayusculas\n        this.substringInput[this.currentText][this.currentSub][text.charCodeAt(i) - 55] += 1;\n        if (this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i) - 55] !== 0) this.audios[this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i) - 55]].play();\n      } else if (97 <= text.charCodeAt(i) && text.charCodeAt(i) <= 122) {\n        // minusculas\n        this.substringInput[this.currentText][this.currentSub][text.charCodeAt(i) - 87] += 1;\n        if (this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i) - 87] !== 0) this.audios[this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i) - 87]].play();\n      } else if (48 <= text.charCodeAt(i) && text.charCodeAt(i) <= 57) {\n        // numeros\n        this.substringInput[this.currentText][this.currentSub][text.charCodeAt(i) - 48] += 1;\n        if (this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i) - 48] !== 0) this.audios[this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i) - 48]].play();\n      }\n    }\n\n    this.playerInput = \"\";\n    this.calculateScore();\n  }\n\n  initializeMatrixes() {\n    for (let t = 0; t < this.texts.length; t++) {\n      this.substringInput[t] = new Array();\n      this.substringScore[t] = new Array();\n      this.substringSound[t] = new Array();\n      this.substringValue[t] = new Array();\n      this.minValues[t] = new Array();\n\n      for (let s = 0; s < this.texts[t].length; s++) {\n        this.substringInput[t][s] = new Array();\n        this.substringScore[t][s] = new Array();\n        this.substringSound[t][s] = new Array();\n        this.substringValue[t][s] = new Array();\n        this.minValues[t][s] = new Array();\n\n        for (let n = 0; n < 37; n++) {\n          this.substringInput[t][s][n] = 0;\n          this.substringScore[t][s][n] = 0;\n          this.substringSound[t][s][n] = 0;\n          this.substringValue[t][s][n] = 0;\n          this.minValues[t][s][n] = 0;\n        }\n      }\n    }\n  }\n\n  calculateScore() {\n    let ret = true;\n\n    for (let i = 0; i < this.substringScore[0][0].length; i++) {\n      if (this.substringValue[this.currentText][this.currentSub][i] !== 0) {\n        this.substringScore[this.currentText][this.currentSub][i] = this.substringInput[this.currentText][this.currentSub][i] / this.substringValue[this.currentText][this.currentSub][i];\n      } else {\n        this.substringScore[this.currentText][this.currentSub][i] = 1;\n      }\n    }\n\n    let index = 0;\n\n    while (ret && index < this.substringScore[0][0].length) {\n      ret = this.substringScore[this.currentText][this.currentSub][index] >= this.minValues[this.currentText][this.currentSub][index];\n      index++;\n    }\n\n    console.log('puntaje: ', this.substringScore[this.currentText][this.currentSub]);\n    console.log('minimos: ', this.minValues[this.currentText][this.currentSub]);\n    if (ret) this.nextSub();\n  }\n\n  nextSub() {\n    if (this.currentSub < this.texts[this.currentText].length - 1) {\n      this.alreadyShown += this.texts[this.currentText][this.currentSub];\n      this.currentSub++;\n      document.getElementById('pastText').innerHTML = this.alreadyShown + this.texts[this.currentText][this.currentSub]; // document.getElementById('currentText')!.innerHTML=this.texts[this.currentText][this.currentSub];\n    } else if (this.currentText < this.texts.length - 1) {\n      this.currentText++;\n      this.currentSub = 0;\n      this.alreadyShown = '';\n      document.getElementById('pastText').innerHTML = '';\n      document.getElementById('currentText').innerHTML = this.texts[this.currentText][this.currentSub];\n    } else {\n      console.log('GAME OVER');\n      this.alreadyShown = 'GAME OVER';\n      document.removeEventListener('keydown', () => {}, true);\n    }\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)();\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"content-container\"], [1, \"instrucciones-container\"], [1, \"instrucciones\"], [1, \"texto-container\"], [\"id\", \"pastText\", 1, \"texto-negro\"], [\"id\", \"currentText\", 1, \"texto-rojo\"], [2, \"align-self\", \"flex-end\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelement(5, \"div\", 4);\n      i0.ɵɵelement(6, \"div\", 5);\n      i0.ɵɵelement(7, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.instructions, \" \");\n    }\n  },\n  styles: [\".content-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  background: lightgreen;\\n}\\n\\n.instrucciones-container[_ngcontent-%COMP%] {\\n  max-width: 70%;\\n  background: red;\\n}\\n\\n.instrucciones[_ngcontent-%COMP%] {\\n  font-family: \\\"EB Garamond\\\", serif;\\n  font-size: x-large;\\n}\\n\\n.texto-container[_ngcontent-%COMP%] {\\n  width: 70%;\\n  height: 100%;\\n  background: grey;\\n  text-align: justify;\\n}\\n\\n.texto-negro[_ngcontent-%COMP%] {\\n  font-family: \\\"EB Garamond\\\", serif;\\n  font-size: x-large;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.texto-rojo[_ngcontent-%COMP%] {\\n  font-family: \\\"EB Garamond\\\", serif;\\n  font-size: x-large;\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7QUFDSjs7QUFFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FBQ0o7O0FBRUE7RUFDSSxpQ0FBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUFFSjs7QUFBQTtFQUNJLGlDQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7QUFHSjs7QUFEQTtFQUNJLGlDQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0FBSUoiLCJmaWxlIjoiaG9tZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50LWNvbnRhaW5lcntcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiBsaWdodGdyZWVuO1xuICAgIFxufVxuLmluc3RydWNjaW9uZXMtY29udGFpbmVye1xuICAgIG1heC13aWR0aDogNzAlO1xuICAgIGJhY2tncm91bmQ6cmVkO1xuXG59XG4uaW5zdHJ1Y2Npb25lc3tcbiAgICBmb250LWZhbWlseTogJ0VCIEdhcmFtb25kJywgc2VyaWY7XG4gICAgZm9udC1zaXplOiB4LWxhcmdlO1xufVxuLnRleHRvLWNvbnRhaW5lcntcbiAgICB3aWR0aDogNzAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiBncmV5O1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG59XG4udGV4dG8tbmVncm97XG4gICAgZm9udC1mYW1pbHk6ICdFQiBHYXJhbW9uZCcsIHNlcmlmO1xuICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4udGV4dG8tcm9qb3tcbiAgICBmb250LWZhbWlseTogJ0VCIEdhcmFtb25kJywgc2VyaWY7XG4gICAgZm9udC1zaXplOiB4LWxhcmdlO1xuICAgIGNvbG9yOnJlZDtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/home/ggomez/Escritorio/KeyboardTale/src/app/home/home.component.ts","/home/ggomez/Escritorio/KeyboardTale/src/app/home/home.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  texts: string[][] = [[],[]]; // textos divididos en substrings\n  currentText: number = 0; // texto al que pertenece el subtring que se esta mostrando\n  currentSub: number = 0; // substring que se muestra en pantalla\n  instructions: string= \"\"; // instrucciones del juego\n  substringInput: number[][][]; // lleva la cantidad de veces que se ingreso cada letra: [texto][substring][cant. letra]\n  substringScore: number[][][]; // lleva el puntaje de cada substring: [texto][substring][puntaje por letra]\n  substringSound: number[][][]; // indica que sonido suena cuando se apreta x tecla en y substring de z texto\n  substringValue: number[][][];\n  minValues: number[][][]; // puntaje minimo del substring para pasar al siguiente\n  \n  //audios: Audio[] = [];\n  alreadyShown: string = \"\";\n  playerInput: string = \"\"; // lo que el jugador esta ingresando en tiempo real\n\n\n  audios: HTMLAudioElement[] = []; // coleccion de todos los audios\n\n  constructor() { \n    this.substringInput=[];\n    this.substringScore=[];\n    this.substringSound=[];\n    this.substringValue=[];\n    this.minValues=[];\n  }\n\n  async ngOnInit(){\n    await this.fetchTexts().then( () =>\n      this.fetchSound()\n    ).then( () => {\n      this.initializeMatrixes();\n      this.setMinValues();\n      this.setSounds();\n      this.setSubstringValues();\n      console.log(this.audios);\n      document.addEventListener( 'keydown', (event) => {\n        this.processInput(event.key);\n      }, true);\n    });\n    document.getElementById('pastText')!.innerHTML=this.texts[this.currentText][this.currentSub];\n  }\n  \n  \n  setSubstringValues() {\n    for(let t = 0; t<this.texts.length; t++){\n      for(let s = 0; s<this.texts[t].length; s++){\n        for(let i:number=0; i<this.texts[t][s].length; i++){\n          if (65<=this.texts[t][s].charCodeAt(i) && this.texts[t][s].charCodeAt(i)<=90){ // mayusculas\n            this.substringValue[t][s][this.texts[t][s].charCodeAt(i)-55]+=1;\n          }else if (97<=this.texts[t][s].charCodeAt(i) && this.texts[t][s].charCodeAt(i)<=122){ // minusculas\n            this.substringValue[t][s][this.texts[t][s].charCodeAt(i)-87]+=1;\n          }else if (48<=this.texts[t][s].charCodeAt(i) && this.texts[t][s].charCodeAt(i)<=57){ // numeros\n            this.substringValue[t][s][this.texts[t][s].charCodeAt(i)-48]+=1;\n          }\n        }\n      }\n    }\n    console.log('values: ',this.substringValue[0]);\n  }\n  \n  async setSounds() {\n    let result = await fetch('/assets/texts/indiceAudios.txt').then(data => data.text());\n    let instances = result.match(/.*Audio\\.txt/g);\n    for (let i=0; i<instances!.length; i++){\n      let j=0;\n      await fetch('/assets/texts/'+instances![i]).then( data => data.text() ).then( text => {\n        let arrays = text.match(/\\[(.*)\\]/g);\n        arrays!.forEach( value => {\n          this.substringSound[i][j]=this.textToValues(value);\n          j++;\n        });\n      });\n    }\n  }\n\n  async setMinValues() {\n    let result = await fetch('/assets/texts/indiceValores.txt').then(data => data.text());\n    let instances = result.match(/.*Valores\\.txt/g);\n    for (let i=0; i<instances!.length; i++){\n      let j=0;\n      await fetch('/assets/texts/'+instances![i]).then( data => data.text() ).then( text => {\n        let arrays = text.match(/\\[(.*)\\]/g);\n        arrays!.forEach( value => {\n          this.minValues[i][j]=this.textToValues(value);\n          j++;\n        });\n      });\n    }\n  }\n  \n  textToValues(value: string): number[] {\n    let valuesArray: number[] = [];\n    value.split(/\\[|\\]/)[1].split(',').forEach(value => valuesArray.push(+value));\n    \n    return valuesArray;\n  }\n\n  async fetchTexts(){\n    await fetch('/assets/texts/instrucciones.txt').then( data => data.text() ).then(text => this.instructions=text);\n    let result = await fetch('/assets/texts/indice.txt').then(data => data.text());\n    let instances = result.match(/([a-z]*[A-Z]*[0-9]*)*\\.txt/g);\n    for (let i=0; i<instances!.length; i++){\n      let j=0;\n      await fetch('/assets/texts/'+instances![i]).then( data => data.text() ).then( text => {\n        this.textToFrases(text).forEach( frase => {\n          this.texts[i][j]=frase\n          j++;\n        });\n      });\n    }\n  }\n\n  textToFrases(text: string): string[]{\n    let ret: string[] = [];\n    text.split(/\\|\\|\\|/).forEach(frase => {    \n        ret.push(frase);\n    });\n    return ret;\n  }\n\n  async fetchSound(){\n    let result: string = \"\";\n    await fetch('/assets/sounds/audios.txt').then( data => data.text() ).then( text => result=text);\n    let instances = result.match(/(.*\\.wav)/g);\n    for (let i=0; i<instances!.length; i++){\n      this.audios.push(new Audio('/assets/sounds/'+instances![i]));\n    }\n  }\n\n  processInput(text: string){\n    const splitted = text.split('<br>');\n    if (splitted.length > 1) {text=splitted[1];\n    console.log(text);}\n    for(let i:number=0; i<text.length; i++){\n      if (65<=text.charCodeAt(i) && text.charCodeAt(i)<=90){ // mayusculas\n          this.substringInput[this.currentText][this.currentSub][text.charCodeAt(i)-55]+=1;\n          if (this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i)-55]!==0) this.audios[this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i)-55]].play();\n      }else if (97<=text.charCodeAt(i) && text.charCodeAt(i)<=122){ // minusculas\n          this.substringInput[this.currentText][this.currentSub][text.charCodeAt(i)-87]+=1;\n          if (this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i)-87]!==0) this.audios[this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i)-87]].play();\n      }else if (48<=text.charCodeAt(i) && text.charCodeAt(i)<=57){ // numeros\n          this.substringInput[this.currentText][this.currentSub][text.charCodeAt(i)-48]+=1;\n          if (this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i)-48]!==0) this.audios[this.substringSound[this.currentText][this.currentSub][text.charCodeAt(i)-48]].play();\n      }\n    }\n    this.playerInput=\"\"\n    this.calculateScore();\n  }\n\n  initializeMatrixes(){\n    for(let t = 0; t<this.texts.length; t++){\n      this.substringInput[t]=new Array();\n      this.substringScore[t]=new Array();\n      this.substringSound[t]=new Array();\n      this.substringValue[t]=new Array();\n      this.minValues[t]=new Array();\n      for(let s = 0; s<this.texts[t].length; s++){\n        this.substringInput[t][s]=new Array();\n        this.substringScore[t][s]=new Array();\n        this.substringSound[t][s]=new Array();\n        this.substringValue[t][s]=new Array();\n        this.minValues[t][s]=new Array();\n        for(let n = 0; n<37; n++){\n          this.substringInput[t][s][n]=0;\n          this.substringScore[t][s][n]=0;\n          this.substringSound[t][s][n]=0;\n          this.substringValue[t][s][n]=0;\n          this.minValues[t][s][n]=0;\n        }\n      }\n    }\n  }\n\n  calculateScore(){\n    let ret = true;\n    for(let i = 0; i<this.substringScore[0][0].length; i++){\n      if(this.substringValue[this.currentText][this.currentSub][i]!==0){\n        this.substringScore[this.currentText][this.currentSub][i]=\n          this.substringInput[this.currentText][this.currentSub][i] /\n          this.substringValue[this.currentText][this.currentSub][i];\n      }else{\n        this.substringScore[this.currentText][this.currentSub][i]=1;\n      }\n    }\n    let index=0;\n    while(ret && index<this.substringScore[0][0].length){\n      ret=this.substringScore[this.currentText][this.currentSub][index]>=this.minValues[this.currentText][this.currentSub][index];\n      index++;\n    }\n    console.log('puntaje: ',this.substringScore[this.currentText][this.currentSub]);\n    console.log('minimos: ',this.minValues[this.currentText][this.currentSub]);\n    if (ret) this.nextSub();\n  }\n\n  nextSub(){\n    if(this.currentSub<this.texts[this.currentText].length-1){\n      this.alreadyShown+=this.texts[this.currentText][this.currentSub];\n      this.currentSub++;\n      document.getElementById('pastText')!.innerHTML=this.alreadyShown + this.texts[this.currentText][this.currentSub];\n      // document.getElementById('currentText')!.innerHTML=this.texts[this.currentText][this.currentSub];\n    }else if(this.currentText<this.texts.length-1){\n      this.currentText++;\n      this.currentSub=0;\n      this.alreadyShown = '';\n      document.getElementById('pastText')!.innerHTML = '';\n      document.getElementById('currentText')!.innerHTML = this.texts[this.currentText][this.currentSub];\n    }else{\n      console.log('GAME OVER');\n      this.alreadyShown = 'GAME OVER';\n      document.removeEventListener('keydown', () => {} , true);\n    }\n  }\n\n  // determineColor(text: string): string{\n  //   let newText = \"\";\n  //   text.split(' ').forEach( word => {\n  //     let aux = word.match(/\\[(.)\\/([b|g|r|y])\\]/gm);\n  //     let color = \"\";\n  //     if(aux){\n  //       aux.forEach( values => {\n  //         let data = values.match(/(.)\\/(.)/);\n  //         if (data![2]==\"r\") {\n  //           color='red';\n  //         }else if (data![2]==\"g\") {\n  //           color='green';\n  //         }\n  //         else if (data![2]==\"b\") {\n  //           color='blue';\n  //         }\n  //         else if (data![2]==\"y\") {\n  //           color='yellow';\n  //         }\n  //         let regex = new RegExp('\\\\['+data![1]+'\\/'+data![2]+'\\\\]');\n  //         word = word.replace(regex, '<span style=color:'+color+'>'+data![1]+'</span>');\n  //       });\n  //     }\n  //     newText += word+' ';\n  //   });\n  //   return newText;\n  // }\n}\n","<div class=\"content-container\">\n    <div class=\"instrucciones-container\">\n        <div class=\"instrucciones\">\n            {{instructions}}\n        </div>\n    </div>\n    <div class=\"texto-container\">\n        <div class=\"texto-negro\" id=\"pastText\">\n            \n        </div>\n        <div class=\"texto-rojo\" id=\"currentText\">\n            \n        </div>\n        <div style=\"align-self: flex-end;\">\n        </div>\n    </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}